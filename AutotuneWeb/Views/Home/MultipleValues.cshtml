@model AutotuneWeb.Models.NSProfileDetails

@{
    ViewBag.Title = "Multiple Profile Values";
    var secondsInDay = 60 * 60 * 24;
}

@if (ViewBag.PreviousResults)
{
    <div class="alert alert-info">
        <p>Looking for your previous results?</p>
        <p>
            <a href="/Results/Index?nsUrl=@ViewBag.NSUrl" class="btn btn-success">View Results</a>
        </p>
    </div>
}

<h1>Multiple Values in Profile</h1>

@if (Model.CarbRatio.Length > 1 && Model.Sensitivity.Length > 1)
{
    <p>
        You have a different ICR in your profile, but we only support one now.
    </p>
}
else if (Model.CarbRatio.Length > 1)
{
    <p>
        You have a different ICR in your profile, but we only support one now.
    </p>
}
else
{
    <p>
        You have a different ICR in your profile, but we only support one now.
    </p>
}

<p>
    You must choose one from your profile below or the average daily value.
</p>

@using (Html.BeginForm())
{
    @Html.Hidden("NSUrl", (Uri)ViewBag.NSUrl)

    if (Model.CarbRatio.Length > 1)
    {
        var maxValue = Model.CarbRatio.Max(cr => cr.Value);
        var averageValue = Math.Round(Model.CarbRatio.Average(cr => cr.Value), 1);

        <h2>Insulin to carb ratio (ICR, g/U)</h2>
        <p>
            Select a value to use from one of the time blocks taken from your profile below, or use your average value across the day.
        </p>
        <p>
            <label>
                <input type="radio" name="cr" value="@averageValue" checked />
                Mean ICR: (@averageValue.ToString("0.0") - Marked with a dotted line below)
            </label>
        </p>
        <div class="timeline">
            <div class="avgline" style="margin-top: @(100 - (averageValue * 100 / maxValue))px">
            </div>
            @for (var i = 0; i < Model.CarbRatio.Length; i++)
            {
                var cr = Model.CarbRatio[i];
                var endTime = i < Model.CarbRatio.Length - 1 ? Model.CarbRatio[i + 1].TimeAsSeconds : secondsInDay;
                var duration = endTime - cr.TimeAsSeconds;

                <div class="timeline-block" style="width: @(duration * 100f / secondsInDay)%; height: @(cr.Value * 100 / maxValue)px; margin-top: @(100 - (cr.Value * 100 / maxValue))px">
                    <p>
                        <label>
                            <input type="radio" name="cr" value="@cr.Value" /><br />
                            @cr.Value.ToString("0.0")
                        </label>
                    </p>
                </div>
            }
        </div>
    }

    if (Model.Sensitivity.Length > 1)
    {
        var maxValue = Model.Sensitivity.Max(sens => sens.Value);
        var averageValue = Math.Round(Model.Sensitivity.Average(sens => sens.Value), 1);

        <h2>Insulin Sensitivity Factor (@(Model.Units == "mmol" ? "mmol/L" : "mg/dL")/U)</h2>
        <p>
            Select a value to use from one of the time blocks taken from your profile below, or use your average value across the day.
        </p>
        <p>
            <label>
                <input type="radio" name="sens" value="@averageValue" checked />
                Average (@(averageValue.ToString("0.0")) - dashed line in chart below)
            </label>
        </p>
        <div class="timeline">
            <div class="avgline" style="margin-top: @(100 - (averageValue * 100 / maxValue))px">
            </div>
            @for (var i = 0; i < Model.Sensitivity.Length; i++)
            {
                var sens = Model.Sensitivity[i];
                var endTime = i < Model.Sensitivity.Length - 1 ? Model.Sensitivity[i + 1].TimeAsSeconds : secondsInDay;
                var duration = endTime - sens.TimeAsSeconds;

                <div class="timeline-block" style="width: @(duration * 100f / secondsInDay)%; height: @(sens.Value * 100 / maxValue)px; margin-top: @(100 - (sens.Value * 100 / maxValue))px">
                    <p>
                        <label>
                            <input type="radio" name="sens" value="@sens.Value" /><br />
                            @(sens.Value.ToString("0.0"))
                        </label>
                    </p>
                </div>
            }
        </div>
    }

    <p>
        <input type="submit" class="btn btn-success" value="Select" />
    </p>
}